# Default values for cluster-connector.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Overrides name template
nameOverride: ""
# Overrides fullname template
fullnameOverride: ""

replicaCount: 1

# Docker registry fqdn used to pull docker images
# Set this to use docker registry hosted at ${registryFQDN}/${registry}/${image}
registryFQDN: ""
image:
  # Docker registry used to pull operator image
  registry: appscode
  # Name of operator container image
  repository: cluster-connector
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
kubectl:
  # Docker registry used to pull operator image
  registry: appscode
  # Name of operator container image
  repository: kubectl
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.22"

# Specify an array of imagePullSecrets.
# Secrets must be manually created in the namespace.
#
# Example:
# helm template charts/stash \
#   --set imagePullSecrets[0].name=sec0 \
#   --set imagePullSecrets[1].name=sec1
imagePullSecrets: []
# Container image pull policy
imagePullPolicy: Always

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

user:
  name: ''
  email: ''
  product: console-enterprise
  tos: 'true'
  token: ''
linkID: ''

nats:
  address: ''
