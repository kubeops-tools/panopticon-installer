{{- if .Values.kubeconfigSecretName }}

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "kube-ui-server.fullname" . }}-configure-rbac
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kube-ui-server.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade,post-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
spec:
  ttlSecondsAfterFinished: 0
  backoffLimit: 3
  template:
    spec:
      {{- include "appscode.imagePullSecrets" . | nindent 6 }}
      automountServiceAccountToken: false
      containers:
      - name: kubectl
        image: {{ include "image.registry" $ }}/kubectl:1.23
        workingDir: /var/run/secrets/ocm
        command:
          - sh
          - -c
          - |
              sleep 2; \
              kubectl --kubeconfig=auth/kubeconfig apply -f - <<EOF
              {{- $restpl := $.Files.Get "common/cluster-role.yaml" -}}
              {{- tpl $restpl $ | nindent 14 -}}
              ---
              {{- $restpl := $.Files.Get "common/cluster-role-binding.yaml" -}}
              {{- tpl $restpl $ | nindent 14 -}}
              ---
              {{- $restpl := $.Files.Get "common/user-roles.yaml" -}}
              {{- tpl $restpl $ | nindent 14 -}}
              EOF
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        volumeMounts:
        - mountPath: /var/run/secrets/ocm/auth
          name: ocm-auth
      volumes:
      - name: ocm-auth
        secret:
          defaultMode: 420
          secretName: {{ .Values.kubeconfigSecretName }}
      restartPolicy: Never

{{- end }}
